generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String  @id @default(uuid())
  name            String
  username        String  @unique
  email           String  @unique
  password        String
  profileImageUrl String?

  tweets Tweet[]
  likes  Like[]

  // Relacionamento de seguidores (quem este usuário segue)
  following Follows[] @relation("following")

  // Relacionamento de seguidores (quem segue este usuário)
  followers Follows[] @relation("followers")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tweet {
  id      String @id @default(uuid())
  content String

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  likes Like[]

  // Para replies
  replyTo   Tweet?  @relation("Replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replyToId String?
  replies   Tweet[] @relation("Replies")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  tweetId   String
  createdAt DateTime @default(now())

  @@id([userId, tweetId])
}

model Follows {
  follower   User   @relation("following", fields: [followerId], references: [id])
  followerId String

  following   User   @relation("followers", fields: [followingId], references: [id])
  followingId String

  createdAt DateTime @default(now())

  @@id([followerId, followingId])
}
